#blueprint {
#  streamlets {
#    tx-ingress = pipelines.examples.modelserving.frauddetection.WineRecordIngress
#    model-ingress = pipelines.examples.modelserving.winequality.WineModelIngress
#    model-serving = pipelines.examples.modelserving.winequality.WineModelServer
#    console-egress = pipelines.examples.modelserving.winequality.WineResultConsoleEgress
#  }
#  connections {
#    tx-ingress.out = [model-serving.in-0]
#    model-ingress.out = [model-serving.in-1]
#    model-serving.out = [console-egress.in]
#  }
#}

blueprint {
   streamlets {
     fraud-model-ingress = pipelines.examples.modelserving.frauddetection.FraudModelIngress
     tx-ingress = pipelines.examples.modelserving.frauddetection.TxRecordIngress
     tx-filter = pipelines.examples.modelserving.frauddetection.TransactionFilter
     tx-enrich = pipelines.examples.modelserving.frauddetection.TransactionEnricher
     model-server = pipelines.examples.modelserving.frauddetection.FraudModelServer
     tx-out = pipelines.examples.modelserving.frauddetection.InvalidMetricLoggingEgress
   }
   connections {
     tx-ingress.out = [tx-filter.in]
     tx-filter.out = [tx-enrich.in]
     tx-enrich.out = [model-server.in-0]
     fraud-model-ingress.out = [model-server.in-1]
     model-server.out = [tx-out.in]
   }
 }
